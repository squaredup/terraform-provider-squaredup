{
  "_type": "layout/grid",
  "contents": [
    {
      "static": false,
      "w": 2,
      "moved": false,
      "h": 3,
      "x": 0,
      "y": 0,
      "i": "1",
      "config": {
        "dataStream": {
          "pluginConfigId": "{{sample_data_source_id}}",
          "id": "{{cloud_watch_logs_id}}"
        },
        "scope": {
          "query": "g.V().order().by('__name').hasNot('__canonicalType').has(\"__configId\", \"{{sample_data_source_id}}\").or(__.has(\"sourceType\", within(\"sample-function\",\"sample-server\",\"sample-database\"))).limit(500)",
          "bindings":{},
          "queryDetail": {}
        },
        "_type": "tile/data-stream",
        "description": "",
        "baseTile": "data-stream-base-tile",
        "title": "Account Common Lambda Logs",
        "visualisation": {
          "type": "data-stream-table",
          "config": {
            "data-stream-table": {
              "resizedColumns": {
                "columnWidths": {
                  "logs.timestamp": 150
                }
              }
            }
          }
        }
      }
    },
    {
      "static": false,
      "w": 2,
      "moved": false,
      "h": 3,
      "x": 2,
      "y": 0,
      "i": "5b12f14a-feba-4654-9f60-673db803a1f8",
      "config": {
        "_type": "tile/data-stream",
        "description": "",
        "title": "Build Runs",
        "dataStream": {
          "pluginConfigId": "{{azure_devops_data_source_id}}",
          "id": "{{azure_devops_build_runs_id}}"
        },
        "visualisation": {
          "type": "data-stream-blocks"
        },
        "scope": {
          "query": "g.V().order().by('__name').hasNot('__canonicalType').has(\"__configId\", \"{{azure_devops_data_source_id}}\").or(__.has(\"sourceType\", within(\"Azure DevOps Build Pipeline\",\"Azure DevOps Build Folder\",\"Azure DevOps Project\"))).limit(500)",
          "bindings": {},
          "queryDetail": {}
        }
      }
    },
    {
      "static": false,
      "w": 2,
      "moved": false,
      "h": 3,
      "x": 0,
      "y": 3,
      "i": "c91bff56-7e46-4b68-b3ff-2db12d69dd65",
      "config": {
        "_type": "tile/data-stream",
        "description": "",
        "title": "Agent Runs",
        "dataStream": {
          "pluginConfigId": "{{azure_devops_data_source_id}}",
          "id": "{{azure_devops_agent_usage_id}}"
        },
        "visualisation": {
          "type": "data-stream-line-graph"
        },
        "scope": {
          "query": "g.V().order().by('__name').hasNot('__canonicalType').has(\"__configId\", \"{{azure_devops_data_source_id}}\").or(__.has(\"sourceType\", within(\"Azure DevOps Build Pipeline\",\"Azure DevOps Build Folder\",\"Azure DevOps Project\"))).limit(500)",
          "bindings": {},
          "queryDetail": {}
        }
      }
    },
    {
      "static": false,
      "w": 2,
      "moved": false,
      "h": 3,
      "x": 2,
      "y": 3,
      "i": "704a9616-9950-45ae-8061-1e3d228624c7",
      "config": {
        "_type": "tile/data-stream",
        "description": "",
        "title": "Lambda Errors",
        "dataStream": {
          "pluginConfigId": "{{sample_data_source_id}}",
          "id": "{{perf_lambda_errors_id}}",
          "group": {
            "by": [
              "data.lambdaErrors.label",
              "uniqueValues"
            ],
            "aggregate": [
              {
                "type": "sum",
                "names": [
                  "data.lambdaErrors.value"
                ]
              }
            ]
          }
        },
        "visualisation": {
          "type": "data-stream-donut-chart",
          "config": {
            "data-stream-grouped-bar": {
              "yAxisLabel": "",
              "horizontalLayout": "vertical",
              "showValue": false,
              "xAxisLabel": "",
              "range": {
                "type": "auto"
              },
              "groupMode": "stacked",
              "showGrid": true,
              "displayMode": "actual"
            }
          }
        },
        "scope": {
          "query": "g.V().order().by('__name').hasNot('__canonicalType').has(\"__configId\", \"{{sample_data_source_id}}\").or(__.has(\"sourceType\", \"sample-function\")).limit(500)",
          "bindings": {},
          "queryDetail": {}
        }
      }
    }
  ],
  "version": 15,
  "columns": 4
}